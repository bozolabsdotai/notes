Below is step by step process to bring up your development environment using HortonSandbox

1. Download ova file using the link http://hortonassets.s3.amazonaws.com/2.2/Sandbox_HDP_2.2_VMware.ova
2. After downloading import this vm using vmplayer(free or licensed). I am using licensed one. Do not start the VM.
3. Goto Edit Virtual Machine Settings->Network Adapter->Select Bridged and also check "Replicate physical network connection state".
4. Increase the memory to 13GB(My system has 16GB RAM).
5. Now power on the VM.
6. Once the boot up is complete press "Alt + F5" to get into the console. Booted OS is CentOS6
7. Login using "root/hadoop" credential.
8. On console check whether internet has been detected by the booted OS or not using "ping www.google.co.in". 
   Right response means we are good to go. If something is wrong with the network fix that first before proceeding. 
   Make sure the internet is detected by the booted OS.
9. Now the VM does not has GUI like one Cloudera QuickStart has. But luckily this is a CentOS so we can arrange for that.
10. Run below command to install Desktop and Related Utilities
   #yum -y yum -y groupinstall "Desktop" "Desktop Platform" "X Window System" "Fonts" "vim" "firefox"
    Completion of this command may take some time.It may download and install around 180MB of files.
11. We are not done yet. System currently boots in console mode. We need to change it to GUI mode. 
   #vim /etc/inittab
   Locate the following line “id:3:initdefault:” and change the number value from 3 (default) to 5
12. Reboot the system
13. Now if everything has gone right system should boot in GUI mode. It will display all user in the system
    except the root user. Select "other" and login using "root/hadoop".
14. We are not done yet. If you want Ctrl+C Ctrl+V functionality between your Windows Host and Booted VM you 
   need to install VMWare Tool. Goto VMWare Player->VM->Install/Reinstall VMware Tools.
   This should bring up "VMware Tool" option on your desktop. Now we will install it. Please follow following steps:
15. #cd /media/VMware Tool
16. #cp VMwareTools*.tar.gz /tmp
17. #cd /tmp
18. #tar xvf VMwareTools*.tar.gz
19. #cd vmware-tools-distrib
20. #./vmware-install.pl
21. Accept all the default options by simply pressing enter on all the options.
22. Upon successful exit. Reboot the VM. After reboot it will display all user in the system
    except the root user. Select "other" and login using "root/hadoop".
    
    
    Setting up R packages:
    For R packages to successfully installed we need to set up development environment first:
    R by default is not available in the system. Let's install that first
1. #yum install R
   This should install lots of packages which are dependencies for R
2. Check the installation of R by starting it from console. You should get R command line.
3. Let's install R-studio:
4. First install right version of openssl.
   #yum install openssl098e
5. #yum install --nogpgcheck rstudio-server-0.98.1102-x86_64.rpm
6. #cp /etc/pam.d/login /etc/pam.d/rstudio
7. rstudio will not allow root user to login. Create a user for working in rstudio. 
   Goto System->Administration->Users and Group->Add User
8. Now goto link "http://localhost:8787". Login using new user created above. This should work fine.

   Setting up Python packages:
1. Current version of python installed in the system is Python 2.6.6.
2. To facilitate smooth installation of python packages using pip we first need to ensure all needed 
   dependencies are installed.
3. #yum -y groupinstall "Development tools";yum -y install zlib-devel;yum -y install bzip2-devel;yum -y install openssl-devel;yum -y install ncurses-devel;yum -y install openmpi openmpi-devel python-devel;yum -y install gfortran openblas-devel lapack-devel;yum -y install libfreetype6-devel libpng-devel;yum -y install unixODBC-devel
4. #yum -y install libyaml-devel
5. #yum -y install libffi-devel libxslt-devel libxslt libxml2-devel libxml2 libssl-devel
6. #pip install numpy;pip install scipy;pip install pandas
7. Eclipse can be used as Python IDE. Goto link http://pydev.org/manual_101_install.html to know how to configure 
   eclipse for python development.

   Setting up Scala:
1. Download Scala from http://www.scala-lang.org/download/2.11.5.html
2. #cd /root; wget http://downloads.typesafe.com/scala/2.11.5/scala-2.11.5.tgz
2. #tar xvzf scala-2.11.5.tgz
3. #vim /root/.bashrc
add line in the file
export SCALA_HOME=/root/scala-2.11.5
export PATH=$PATH:$SCALA_HOME/bin
4. #source /root/.bashrc
Scala should now be available via command line. Check by typing scala on the command prompt
5. Now lets set up scala build tool
6. #curl https://bintray.com/sbt/rpm/rpm > bintray-sbt-rpm.repo
7. #mv bintray-sbt-rpm.repo /etc/yum.repos.d/
8. #yum install sbt
9. This should to install sbt on the system. Now to test type sbt on command line. This should start downloading
   some jar files. Let the process complete. This means system is now ready for scala development


   Setting up Mahout:
1. #yum install mahout
   
   Setting up NodeJS and npm
1. #yum install nodejs
2. #yum install npm

Note: Rest Hbase Client for NodeJS
https://github.com/wdavidw/node-hbase
npm install hbase

   Settin up Phoenix with HBase:
1. Install Phoenix on all HBase Region servers:
   #yum install phoenix
   
2. Link the Phoenix core jar file to the HBase Master and Region Servers:
   #ln -sf /usr/hdp/2.2.0.0-2041/phoenix/lib/phoenix-core-4.2.0.2.2.0.0-2041.jar /usr/hdp/2.2.0.0-2041/hbase/lib/phoenix.jar
   
3. Add the following configuration to hbase-site.xml on all HBase nodes, the Master Server, and all Region Servers:
   #vim /etc/hbase/conf/hbase-site.xml
   
   <property>
   <name>hbase.defaults.for.version.skip</name>
   <value>true</value>
</property>
<property>
   <name>hbase.regionserver.wal.codec</name>
   <value>org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec</value>
</property>

4. Restart the HBase Master and Region Servers.

5. Add the phoenix-4.0-client.jar to the classpath of any Phoenix client.
